--- vmblock-only/linux/inode.c	2015-08-20 19:13:46.456345015 -0700
+++ vmblock-only/linux/inode.c	2015-08-20 19:17:24.560559254 -0700
@@ -43,10 +43,12 @@
                                     struct dentry *dentry, unsigned int flags);
 #endif
 static int InodeOpReadlink(struct dentry *dentry, char __user *buffer, int buflen);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 13)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 13)
+static int InodeOpFollowlink(struct dentry *dentry, struct nameidata *nd);
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
 static void *InodeOpFollowlink(struct dentry *dentry, struct nameidata *nd);
 #else
-static int InodeOpFollowlink(struct dentry *dentry, struct nameidata *nd);
+static const char *InodeOpFollowlink(struct dentry *dentry, void **cookie);
 #endif


@@ -216,35 +218,46 @@
  *----------------------------------------------------------------------------
  */

-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 13)
-static void *
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 13)
+static int InodeOpFollowlink(struct dentry *dentry,  // IN : dentry of symlink
+                             struct nameidata *nd)   // OUT: stores result
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
+static void *InodeOpFollowlink(struct dentry *dentry,  // IN : dentry of symlink
+                               struct nameidata *nd)   // OUT: stores result
 #else
-static int
+static const char *InodeOpFollowlink(struct dentry *dentry,  // IN : dentry of symlink
+                                     void **cookie)  //  OUT: stores data
 #endif
-InodeOpFollowlink(struct dentry *dentry,  // IN : dentry of symlink
-                  struct nameidata *nd)   // OUT: stores result
 {
-   int ret;
    VMBlockInodeInfo *iinfo;

    if (!dentry) {
       Warning("InodeOpReadlink: invalid args from kernel\n");
-      ret = -EINVAL;
-      goto out;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 13)
+      return -EINVAL;
+#else
+      return ERR_PTR(-EINVAL);
+#endif
    }

    iinfo = INODE_TO_IINFO(dentry->d_inode);
    if (!iinfo) {
-      ret = -EINVAL;
-      goto out;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 13)
+      return -EINVAL;
+#else
+      return ERR_PTR(-EINVAL);
+#endif
    }

-   ret = vfs_follow_link(nd, iinfo->name);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 13)
+   return vfs_follow_link(nd, iinfo->name);

-out:
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 13)
-   return ERR_PTR(ret);
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(3, 12, 0)
+   return ERR_PTR(vfs_follow_link(nd, iinfo->name));
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
+   nd_set_link(nd, iinfo->name);
+   return NULL;
 #else
-   return ret;
+   return (*cookie = iinfo->name);
 #endif
 }
